name: 'Release' tag format check

on:
  push:
    paths:
      - '**.spec'
    branches: [main, dev, 1.0*]
  pull_request:
    paths:
      - '**.spec'
    branches: [main, dev, 1.0*]

jobs:
  release_tag_format:
    name: 'Release' tag format check
    runs-on: ubuntu-latest

    steps:
      # Checkout the branch of our repo that triggered this action
      - name: Workflow trigger checkout
        uses: actions/checkout@v2

      - name: Get base commit for PRs
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git fetch origin ${{ github.base_ref }}
          echo "base_sha=$(git rev-parse origin/${{ github.base_ref }})" >> $GITHUB_ENV 
          echo "Merging ${{ github.sha }} into ${{ github.base_ref }}"

      - name: Get base commit for Pushes
        if: ${{ github.event_name == 'push' }}
        run: |
          git fetch origin ${{ github.event.before }}
          echo "base_sha=${{ github.event.before }}" >> $GITHUB_ENV 
          echo "Merging ${{ github.sha }} into ${{ github.event.before }}"

      - name: Get the changed files
        run: |
          echo "Files changed: '$(git diff-tree --no-commit-id --name-only -r ${{ env.base_sha }} ${{ github.sha }})'"
          changed_specs=$(git diff-tree --no-commit-id --name-only -r ${{ env.base_sha }} ${{ github.sha }} | { grep "\.spec$" || test $? = 1; })
          echo "Files to validate: '${changed_specs}'"
          echo "updated-specs=$(echo ${changed_specs})" >> $GITHUB_ENV

      - name: Main branch checkout 
        uses: actions/checkout@v2
        with:
          ref: 'main'
          path: 'main-checkout'
      
      - name: Verify 'Release' tag
        run: |
          for spec in ${{ env.updated-specs }}
          do
            if ! grep -P "^Release:\s+(\d+|%\{release_number\})%\{\?dist\}$" "$spec"
            then
              echo "Invalid 'Release' tag format in spec '$spec'!"
              found_errors="true"
            fi
          done

          if [[ -n "$found_errors" ]]
          then
            echo
            echo "====================== 'Release' tags verification FAILED ======================"
            echo
            echo "Found .spec files with an invalid format of the 'Release' tag."
            echo
            echo "Accepted formats are:"
            echo "  - '[number]%{?dist}', example: 10%{?dist}"
            echo "  - '%{release_number}%{?dist}'"
            echo
            echo "The 'Release' tag must also be placed at the beginning of the line."
            echo
            echo "Please update the spec files listed above."

            exit 1
          fi

          exit 0
