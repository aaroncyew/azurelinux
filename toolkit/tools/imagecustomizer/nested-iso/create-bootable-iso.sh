#!/bin/bash

set -x
set -e

# an iso generated by MIC
srcMicIso=/home/george/git/CBL-Mariner-POC/mic-build/out/mic-20240301-1910.iso 

# our own grub to replace Oli's.
srcGrubCfg=/home/george/git/CBL-Mariner-Hand-Off/toolkit/tools/imagecustomizer/nested-iso/grub.cfg

# location of contents downloaded from Oli's pipeline run:
# https://dev.azure.com/msazuredev/AzureForOperatorsIndustry/_build/results?buildId=1723448&view=artifacts&pathAsName=false&type=publishedArtifacts 
inputIsoArtifactsDir=/home/george/temp/drop_build_usb_iso

# overwrite the iso from Oli's drop with the one generated from mic.
stagedMicIso=$inputIsoArtifactsDir/efi/boot/bootstrap.iso

# overwrite the grub from Oli's drop with our own.
stagedGrubCfg=$inputIsoArtifactsDir/boot/grub2/grub.cfg

# output folders
outputIsoDir=/home/george/git/CBL-Mariner-POC/mic-build/out
outputIsoImageName=$outputIsoDir/usb-iso-$(printf "%(%Y%m%d-%H%M)T").iso

# the label has to be something other than CDROM so that it does
# not conflict with the embedded iso.
outputIsoLabel=NOTCDROM

# ---- main ----

echo
find $inputIsoArtifactsDir
echo

mkdir -p $outputIsoDir

sudo cp $srcGrubCfg $stagedGrubCfg

efiBootImage=$inputIsoArtifactsDir/boot/grub2/efiboot.img
efiBootImageMount=/home/george/temp/usb-efiboot-image-mount

sudo rm -f $efiBootImage
dd if=/dev/zero \
   of=$efiBootImage \
   bs=1M \
   count=10
mkdosfs $efiBootImage
mkdir -p $efiBootImageMount
sudo mount -o loop $efiBootImage $efiBootImageMount
efiBootImageBootDir=$efiBootImageMount/EFI/BOOT
sudo mkdir -p $efiBootImageBootDir
sudo cp $inputIsoArtifactsDir/efi/boot/bootx64.efi $efiBootImageBootDir/
sudo cp $inputIsoArtifactsDir/efi/boot/grubx64.efi $efiBootImageBootDir/
sudo umount $efiBootImageMount

sudo cp $srcMicIso $stagedMicIso

sudo mkisofs -R -l -D \
  -V $outputIsoLabel \
  -o $outputIsoImageName \
  -eltorito-alt-boot \
  -e boot/grub2/efiboot.img \
  -no-emul-boot \
  $inputIsoArtifactsDir

echo $outputIsoImageName
