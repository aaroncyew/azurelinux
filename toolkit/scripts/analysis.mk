# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# Contains:
#	- Generate list of built packages
#	- Run ABI check on built packages.

RPM_BUILD_LOGS_DIR=$(LOGS_DIR)/pkggen/rpmbuilding
BUILD_SUMMARY_FILE=$(LOGS_DIR)/pkggen/build-summary.csv
BUILT_PACKAGES_FILE=$(LOGS_DIR)/pkggen/built-packages.txt
ABIDIFF_CONTAINER_NAME=mariner-abidiff
ABIDIFF_DOCKERFILE_DIR=$(SCRIPTS_DIR)/abidiff
ABIDIFF_INTERMEDIATE_OUTPUT_FOLDER=$(RPMS_DIR)/abidiff
ABIDIFF_OUTPUT_FOLDER=$(LOGS_DIR)/abidiff
#TODO P1: Add clean


.PHONY: built-packages-summary
built-packages-summary: $(BUILT_PACKAGES_FILE)

.PHONY: build-summary
build-summary: $(BUILD_SUMMARY_FILE)

# $(BUILT_PACKAGES_FILE): Generates a file containing a space-separated list of built RPM packages and subpackages.
$(BUILT_PACKAGES_FILE): $(BUILD_SUMMARY_FILE)
	cut -f2 --output-delimiter=" " $(BUILD_SUMMARY_FILE) > $(BUILT_PACKAGES_FILE)

# $(BUILD_SUMMARY_FILE): Generates a file containing 2 columns separated by a tab character:
# SRPM name and a space-separated list of RPM packages and subpackages generated by building the SRPM.
# Information is obtained from the build logs.
$(BUILD_SUMMARY_FILE): | $(RPM_BUILD_LOGS_DIR)
	sed -nE -e 's#^.+level=info msg="Built \(([^\)]+)\) -> \[(.+)\].+#\1\t\2#p' $(RPM_BUILD_LOGS_DIR)/* > $(BUILD_SUMMARY_FILE)

$(RPM_BUILD_LOGS_DIR):
	mkdir -p $@
	touch $@

# fake-built-packages-list: Generates a fake list of built packages by producing a file listing all present RPM files in the RPM directory.
.PHONY: fake-built-packages-list
fake-built-packages-list:
	touch $(RPM_BUILD_LOGS_DIR)
	touch $(BUILD_SUMMARY_FILE)
	find $(RPMS_DIR) -type f -name '*.rpm' -exec basename {} \; > $(BUILT_PACKAGES_FILE)


# abidiff-name-check: runs check in a mariner container. Each failed package will be listed in $(ABIDIFF_INTERMEDIATE_OUTPUT_FOLDER).
.PHONY: abidiff-name-check
abidiff-name-check: mariner-container $(BUILT_PACKAGES_FILE)
	docker run -v "$(RPMS_DIR):/abidiff/rpms" -i $(ABIDIFF_CONTAINER_NAME) <$(BUILT_PACKAGES_FILE)
	ls $(ABIDIFF_INTERMEDIATE_OUTPUT_FOLDER)/failed* || $(call print_error, $@ failed - see $(ABIDIFF_INTERMEDIATE_OUTPUT_FOLDER) for list of failed files.)

mariner-container: ensurecmd-docker
	docker build $(ABIDIFF_DOCKERFILE_DIR) -t $(ABIDIFF_CONTAINER_NAME)

# ensurecmd-%: makes sure that the wildcard is an available command. e.g. ensurecmd-cat will make fail if cat is not installed.
.PHONY: ensurecmd-%
ensurecmd-%:
	which $* || $(call print_error, $* command line utility has to be installed for this command to succeed.)
