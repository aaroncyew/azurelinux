diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..53eaa21
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+/target
+**/*.rs.bk
diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
new file mode 100644
index 0000000..838c112
--- /dev/null
+++ b/.gitlab-ci.yml
@@ -0,0 +1,48 @@
+workflow:
+  rules:
+    - if: $CI_MERGE_REQUEST_ID            # Execute jobs in merge request context
+    - if: $CI_COMMIT_BRANCH == 'main'     # Execute jobs when a new commit is pushed to main branch
+
+image: "rust:alpine"
+
+clippy:
+  before_script:
+    - apk add musl-dev
+    - rustup component add clippy
+  script:
+    - cargo clippy --verbose -- -Dwarnings
+
+fmt:
+  before_script:
+    - rustup component add rustfmt
+  script:
+    - cargo fmt -v -- --check
+
+test:
+  before_script:
+    - apk add libcap-ng-static libseccomp-static musl-dev
+  script:
+    - rustc --version && cargo --version  # Print version info for debugging
+    - RUSTFLAGS='-C target-feature=+crt-static -C link-self-contained=yes' LIBSECCOMP_LINK_TYPE=static LIBSECCOMP_LIB_PATH=/usr/lib LIBCAPNG_LINK_TYPE=static LIBCAPNG_LIB_PATH=/usr/lib cargo build --verbose --target x86_64-unknown-linux-musl
+    - RUSTFLAGS='-C target-feature=+crt-static -C link-self-contained=yes' LIBSECCOMP_LINK_TYPE=static LIBSECCOMP_LIB_PATH=/usr/lib LIBCAPNG_LINK_TYPE=static LIBCAPNG_LIB_PATH=/usr/lib cargo test --verbose --target x86_64-unknown-linux-musl
+  except:
+      # There is an equivalent job ('publish') that will run when code lands
+      # on the 'main' branch, except it will upload a built binary. These are
+      # kept separate to avoid accidentally uploading binaries when it's not
+      # necessary.
+    - main@virtio-fs/virtiofsd
+
+# Build a statically linked and optimized binary for publishing.
+#
+# This only runs when code is merged to the 'main' branch.
+publish:
+  before_script:
+    - apk add libcap-ng-static libseccomp-static musl-dev
+  script:
+    - RUSTFLAGS='-C target-feature=+crt-static -C link-self-contained=yes' LIBSECCOMP_LINK_TYPE=static LIBSECCOMP_LIB_PATH=/usr/lib LIBCAPNG_LINK_TYPE=static LIBCAPNG_LIB_PATH=/usr/lib cargo build --release --target x86_64-unknown-linux-musl
+  artifacts:
+    name: "virtiofsd-$CI_COMMIT_SHORT_SHA"
+    paths:
+      - target/x86_64-unknown-linux-musl/release/virtiofsd
+  only:
+    - main@virtio-fs/virtiofsd
diff --git a/Cargo.lock b/Cargo.lock
index c451ee0..05dc30f 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -652,9 +652,9 @@ dependencies = [
 
 [[package]]
 name = "vm-memory"
-version = "0.12.0"
+version = "0.12.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a77c7a0891cbac53618f5f6eec650ed1dc4f7e506bbe14877aff49d94b8408b0"
+checksum = "9dc276f0d00c17b9aeb584da0f1e1c673df0d183cc2539e3636ec8cbc5eae99b"
 dependencies = [
  "arc-swap",
  "libc",
diff --git a/Cargo.toml b/Cargo.toml
index 12b2804..f593f16 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -23,7 +23,7 @@ clap = { version = "4", features = ["derive"] }
 vhost-user-backend = "0.10.1"
 vhost = "0.8.1"
 virtio-bindings = { version = "0.2", features = ["virtio-v5_0_0"] }
-vm-memory = { version = "0.12.0", features = ["backend-mmap", "backend-atomic"] }
+vm-memory = { version = "0.12.2", features = ["backend-mmap", "backend-atomic"] }
 virtio-queue = "0.9.0"
 vmm-sys-util = "0.11.1"
 syslog = "6.0"
