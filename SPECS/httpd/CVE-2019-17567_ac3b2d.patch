From ac3b2dabff703f4ee9c55e7b30ac34970d296405 Mon Sep 17 00:00:00 2001
From: Yann Ylavic <ylavic@apache.org>
Date: Sun, 10 May 2020 21:23:14 +0000
Subject: [PATCH] mod_proxy_http: follow up to r1877557.

Yet better, call proxy_run_detach_backend() at the caller.

git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1877558 13f79535-47bb-0310-9956-ffa450edef68
---
 modules/proxy/mod_proxy_http.c | 38 +++++++++++++---------------------
 1 file changed, 14 insertions(+), 24 deletions(-)

diff --git a/modules/proxy/mod_proxy_http.c b/modules/proxy/mod_proxy_http.c
index 62bd44421b8..0f398197e8d 100644
--- a/modules/proxy/mod_proxy_http.c
+++ b/modules/proxy/mod_proxy_http.c
@@ -1245,9 +1245,8 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
                 apr_table_setn(r->notes, "proxy_timedout", "1");
                 ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r, APLOGNO(01103) "read timeout");
                 if (do_100_continue) {
-                    proxy_status = ap_proxyerror(r, HTTP_SERVICE_UNAVAILABLE,
-                                                 "Timeout on 100-Continue");
-                    goto cleanup;
+                    return ap_proxyerror(r, HTTP_SERVICE_UNAVAILABLE,
+                                         "Timeout on 100-Continue");
                 }
             }
             /*
@@ -1297,8 +1296,7 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
                 /* Mark the backend connection for closing */
                 backend->close = 1;
                 /* Need to return OK to avoid sending an error message */
-                proxy_status = OK;
-                goto cleanup;
+                return OK;
             }
             if (!c->keepalives) {
                 ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r, APLOGNO(01105)
@@ -1307,9 +1305,8 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
                               " failed.",
                               backend->hostname, backend->port);
             }
-            proxy_status = ap_proxyerror(r, HTTP_BAD_GATEWAY,
-                                         "Error reading from remote server");
-            goto cleanup;
+            return ap_proxyerror(r, HTTP_BAD_GATEWAY,
+                                 "Error reading from remote server");
         }
         /* XXX: Is this a real headers length send from remote? */
         backend->worker->s->read += len;
@@ -1325,11 +1322,9 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
              * if the status line was > 8192 bytes
              */
             if ((major != 1) || (len >= response_field_size - 1)) {
-                proxy_status = ap_proxyerror(r, HTTP_BAD_GATEWAY,
-                                   apr_pstrcat(p, "Corrupt status line "
-                                               "returned by remote server: ",
-                                               buffer, NULL));
-                goto cleanup;
+                return ap_proxyerror(r, HTTP_BAD_GATEWAY,
+                            apr_pstrcat(p, "Corrupt status line returned "
+                                        "by remote server: ", buffer, NULL));
             }
             backasswards = 0;
 
@@ -1385,8 +1380,7 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
                 r->headers_out = apr_table_make(r->pool,1);
                 r->status = HTTP_BAD_GATEWAY;
                 r->status_line = "bad gateway";
-                proxy_status = r->status;
-                goto cleanup;
+                return r->status;
             }
 
             /* Now, add in the just read cookies */
@@ -1432,9 +1426,8 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
             if (toclose) {
                 backend->close = 1;
                 if (toclose < 0) {
-                    proxy_status = ap_proxyerror(r, HTTP_BAD_GATEWAY,
-                                                 "Malformed connection header");
-                    goto cleanup;
+                    return ap_proxyerror(r, HTTP_BAD_GATEWAY,
+                                         "Malformed connection header");
                 }
             }
 
@@ -1596,8 +1589,7 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
                             c->remote_host ? c->remote_host : "",
                             status);
                     backend->close = 1;
-                    proxy_status = status;
-                    goto cleanup;
+                    return status;
                 }
             }
             else {
@@ -1666,7 +1658,7 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
              * internal error.
              */
             apr_table_setn(r->notes, "proxy-error-override", "1");
-            goto cleanup;
+            return proxy_status;
         }
 
         r->sent_bodyct = 1;
@@ -1871,6 +1863,7 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
              */
             ap_proxy_release_connection(backend->worker->s->scheme,
                     backend, r->server);
+            /* Ensure that the backend is not reused */
             req->backend = NULL;
 
             /* Pass EOS bucket down the filter chain. */
@@ -1900,9 +1893,6 @@ int ap_proxy_http_process_response(proxy_http_req_t *req)
     }
 
     return OK;
-
-cleanup:
-    return proxy_status;
 }
 
 static
