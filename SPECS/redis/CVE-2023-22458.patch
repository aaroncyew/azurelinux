From 16f408b1a0121cacd44cbf8aee275d69dc627f02 Mon Sep 17 00:00:00 2001
From: Oran Agra <oran@redislabs.com>
Date: Mon, 16 Jan 2023 13:50:27 +0200
Subject: [PATCH] Fix range issues in ZRANDMEMBER and HRANDFIELD
 (CVE-2023-22458) (#11674)

missing range check in ZRANDMEMBER and HRANDIFLD leading to panic due
to protocol limitations
---
 src/t_hash.c             | 7 ++++++-
 src/t_zset.c             | 7 ++++++-
 tests/unit/type/hash.tcl | 5 +++++
 tests/unit/type/zset.tcl | 5 +++++
 4 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/src/server.c b/src/server.c
index d887e58..7936198 100644
--- a/src/server.c
+++ b/src/server.c
@@ -3568,6 +3568,11 @@ struct redisCommand *lookupCommandOrOriginal(sds name) {
     return cmd;
 }
 
+/* Commands arriving from the master client or AOF client, should never be rejected. */
+int mustObeyClient(client *c) {
+    return c->id == CLIENT_ID_AOF || c->flags & CLIENT_MASTER;
+}
+
 /* Propagate the specified command (in the context of the specified database id)
  * to AOF and Slaves.
  *
diff --git a/src/server.h b/src/server.h
index bc09ebd..4602cb7 100644
--- a/src/server.h
+++ b/src/server.h
@@ -84,6 +84,12 @@ typedef long long ustime_t; /* microsecond time type. */
 #include "endianconv.h"
 #include "crc64.h"
 
+/* min/max */
+#undef min
+#undef max
+#define min(a, b) ((a) < (b) ? (a) : (b))
+#define max(a, b) ((a) > (b) ? (a) : (b))
+
 /* Error codes */
 #define C_OK                    0
 #define C_ERR                   -1
@@ -2233,6 +2239,7 @@ void preventCommandReplication(client *c);
 void slowlogPushCurrentCommand(client *c, struct redisCommand *cmd, ustime_t duration);
 int prepareForShutdown(int flags);
 void afterCommand(client *c);
+int mustObeyClient(client *c);
 int inNestedCall(void);
 #ifdef __GNUC__
 void _serverLog(int level, const char *fmt, ...)
diff --git a/src/t_hash.c b/src/t_hash.c
index 2720fdb..e7292f7 100644
--- a/src/t_hash.c
+++ b/src/t_hash.c
@@ -1192,8 +1192,13 @@ void hrandfieldCommand(client *c) {
         if (c->argc > 4 || (c->argc == 4 && strcasecmp(c->argv[3]->ptr,"withvalues"))) {
             addReplyErrorObject(c,shared.syntaxerr);
             return;
-        } else if (c->argc == 4)
+        } else if (c->argc == 4) {
             withvalues = 1;
+            if (l < LONG_MIN/2 || l > LONG_MAX/2) {
+                addReplyError(c,"value is out of range");
+                return;
+            }
+        }
         hrandfieldWithCountCommand(c, l, withvalues);
         return;
     }
diff --git a/src/t_zset.c b/src/t_zset.c
index f313b88..c67696e 100644
--- a/src/t_zset.c
+++ b/src/t_zset.c
@@ -4235,8 +4235,13 @@ void zrandmemberCommand(client *c) {
         if (c->argc > 4 || (c->argc == 4 && strcasecmp(c->argv[3]->ptr,"withscores"))) {
             addReplyErrorObject(c,shared.syntaxerr);
             return;
-        } else if (c->argc == 4)
+        } else if (c->argc == 4) {
             withscores = 1;
+            if (l < LONG_MIN/2 || l > LONG_MAX/2) {
+                addReplyError(c,"value is out of range");
+                return;
+            }
+        }
         zrandmemberWithCountCommand(c, l, withscores);
         return;
     }
diff --git a/tests/unit/type/hash.tcl b/tests/unit/type/hash.tcl
index f2a5037..4f22268 100644
--- a/tests/unit/type/hash.tcl
+++ b/tests/unit/type/hash.tcl
@@ -68,6 +68,11 @@ start_server {tags {"hash"}} {
         r hrandfield myhash 0
     } {}
 
+    test "HRANDFIELD count overflow" {
+        r hmset myhash a 1
+        assert_error {*value is out of range*} {r hrandfield myhash -9223372036854770000 withvalues}
+    } {}
+
     test "HRANDFIELD with <count> against non existing key" {
         r hrandfield nonexisting_key 100
     } {}
diff --git a/tests/unit/type/zset.tcl b/tests/unit/type/zset.tcl
index 94b2ab4..5ea619e 100644
--- a/tests/unit/type/zset.tcl
+++ b/tests/unit/type/zset.tcl
@@ -1714,6 +1714,11 @@ start_server {tags {"zset"}} {
         r zrandmember nonexisting_key 100
     } {}
 
+    test "ZRANDMEMBER count overflow" {
+        r zadd myzset 0 a
+        assert_error {*value is out of range*} {r zrandmember myzset -9223372036854770000 withscores}
+    } {}
+
     # Make sure we can distinguish between an empty array and a null response
     r readraw 1
 
