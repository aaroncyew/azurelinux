--- a/app/app_aes.c	2021-02-19 05:30:47.000000000 -0800
+++ b/app/app_aes.c	2021-06-14 21:23:56.975745974 -0700
@@ -48,7 +48,7 @@
     /* Begin encrypt code section */
     cipher_ctx = glb_cipher_ctx;
     if ((tc->test_type != ACVP_SYM_TEST_TYPE_MCT)) {
-        EVP_CIPHER_CTX_init(cipher_ctx);
+        EVP_CIPHER_CTX_reset(cipher_ctx);
     }
 
     switch (tc->cipher) {
@@ -376,11 +376,10 @@
 
     /* Begin encrypt code section */
     cipher_ctx = EVP_CIPHER_CTX_new();
-    EVP_CIPHER_CTX_init(cipher_ctx);
+    EVP_CIPHER_CTX_reset(cipher_ctx);
 
     switch (tc->cipher) {
     case ACVP_AES_KW:
-    case ACVP_AES_KWP:
         switch (tc->key_len) {
         case 128:
             cipher = EVP_aes_128_wrap();
@@ -396,6 +395,22 @@
             goto end;
         }
         break;
+    case ACVP_AES_KWP:
+        switch (tc->key_len) {
+        case 128:
+            cipher = EVP_aes_128_wrap_pad();
+            break;
+        case 192:
+            cipher = EVP_aes_192_wrap_pad();
+            break;
+        case 256:
+            cipher = EVP_aes_256_wrap_pad();
+            break;
+        default:
+            printf("Unsupported AES keywrap pad key length\n");
+            goto end;
+        }
+        break;
     case ACVP_CIPHER_START:
     case ACVP_AES_GCM:
     case ACVP_AES_GCM_SIV:
@@ -497,7 +512,7 @@
 
 #ifdef OPENSSL_KWP
         if (tc->cipher == ACVP_AES_KWP) {
-            EVP_CIPHER_CTX_set_flags(cipher_ctx, EVP_CIPHER_CTX_FLAG_UNWRAP_WITHPAD);
+            // EVP_CIPHER_CTX_set_flags(cipher_ctx, EVP_CIPHER_CTX_FLAG_UNWRAP_WITHPAD);
         }
 #endif
         c_len = EVP_Cipher(cipher_ctx, tc->pt, tc->ct, tc->ct_len);
@@ -554,7 +569,7 @@
         rc = 1;
         goto end;
     }
-    EVP_CIPHER_CTX_init(cipher_ctx);
+    EVP_CIPHER_CTX_reset(cipher_ctx);
 
     /* Validate key length and assign OpenSSL EVP cipher */
     switch (tc->cipher) {
