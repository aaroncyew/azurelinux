From b2e6b0381f6cc23191053854ea7db5ac78c1ec82 Mon Sep 17 00:00:00 2001
From: Vince Perri <viperri@microsoft.com>
Date: Thu, 22 Dec 2022 15:17:32 +0000
Subject: [PATCH] Add Network Interface Renaming Support for CAPM3
 Metal3DataTemplates

The CAPM3 Metal3DataTemplate specification doesn't allow the "name" attribute in
networkData.links.ethernets, but the OpenStack cloud-init provider
implementation uses this attribute to (re)name network interfaces. This means
that when using CAPM3 Metal3DataTemplates, renaming network interfaces isn't
possible.

This patch fixes this by providing a means through which to rename network
interfaces by using the "id" attribute found in the CAPM3 Metal3DataTemplate
specification. This is a temporary fix until the "name" attribute is added to
the specification.
---
 cloudinit/sources/helpers/openstack.py | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/cloudinit/sources/helpers/openstack.py b/cloudinit/sources/helpers/openstack.py
index 094c889ca..dc53c23b0 100644
--- a/cloudinit/sources/helpers/openstack.py
+++ b/cloudinit/sources/helpers/openstack.py
@@ -600,13 +600,14 @@ def convert_net_json(network_json=None, known_macs=None):
         # present.  The 'id' in the spec is currently implemented as the host
         # nic's name, meaning something like 'tap-adfasdffd'.  We do not want
         # to name guest devices with such ugly names.
+        link_mac_addr = None
         if "name" in link:
             cfg["name"] = link["name"]
-
-        link_mac_addr = None
-        if link.get("ethernet_mac_address"):
-            link_mac_addr = link.get("ethernet_mac_address").lower()
-            link_id_info[link["id"]] = link_mac_addr
+            if link.get("ethernet_mac_address"):
+                link_mac_addr = link.get("ethernet_mac_address").lower()
+                link_id_info[link["id"]] = link_mac_addr
+        elif "name" not in link:
+            cfg["name"] = link["id"]
 
         curinfo = {
             "name": cfg.get("name"),
-- 
2.34.1