diff --git a/cloudinit/config/cc_resolv_conf.py b/cloudinit/config/cc_resolv_conf.py
index 466dad03..f12ba20f 100644
--- a/cloudinit/config/cc_resolv_conf.py
+++ b/cloudinit/config/cc_resolv_conf.py
@@ -55,10 +55,10 @@ LOG = logging.getLogger(__name__)
 
 frequency = PER_INSTANCE
 
-distros = ['alpine', 'fedora', 'opensuse', 'rhel', 'sles']
+distros = ['alpine', 'fedora', 'mariner', 'opensuse', 'rhel', 'sles']
 
 
-def generate_resolv_conf(template_fn, params, target_fname="/etc/resolv.conf"):
+def generate_resolv_conf(template_fn, params, target_fname="/etc/systemd/resolved.conf"):
     flags = []
     false_flags = []
 
@@ -104,12 +104,13 @@ def handle(name, cfg, cloud, log, _args):
     if "resolv_conf" not in cfg:
         log.warning("manage_resolv_conf True but no parameters provided!")
 
-    template_fn = cloud.get_template_filename('resolv.conf')
+    template_fn = cloud.get_template_filename('systemd.resolved.conf')
     if not template_fn:
-        log.warning("No template found, not rendering /etc/resolv.conf")
+        log.warning("No template found, not rendering /etc/systemd/resolved.conf")
         return
 
     generate_resolv_conf(template_fn=template_fn, params=cfg["resolv_conf"])
+    util.subp(["systemctl", "restart", "systemd-resolved"])
     return
 
 # vi: ts=4 expandtab
diff --git a/templates/systemd.resolved.conf.tmpl b/templates/systemd.resolved.conf.tmpl
new file mode 100644
index 00000000..fca50d37
--- /dev/null
+++ b/templates/systemd.resolved.conf.tmpl
@@ -0,0 +1,15 @@
+## template:jinja
+# Your system has been configured with 'manage-resolv-conf' set to true.
+# As a result, cloud-init has written this file with configuration data
+# that it has been provided. Cloud-init, by default, will write this file
+# a single time (PER_ONCE).
+#
+[Resolve]
+LLMNR=false
+{% if nameservers is defined %}
+DNS={% for server in nameservers %}{{server}} {% endfor %}
+{% endif %}
+
+{% if searchdomains is defined %}
+Domains={% for search in searchdomains %}{{search}} {% endfor %}
+{% endif %}
